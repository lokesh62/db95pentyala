extends layout 
 
block content 
  h1= title
  meta(charset="utf-8")
  meta(name="viewport", content="width=device-width, initial-scale=1")
  link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css", rel="stylesheet",
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC", crossorigin="anonymous") 
  script(src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js",
        integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p",
        crossorigin="anonymous")
  script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js",
        integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF",
        crossorigin="anonymous") 

  if (toShow == null) 
    h2 No instance to Update 
  else 
   - let carid = toShow._id 
   - let car_brand = toShow.car_brand 
   - let carsize = toShow.size 
   - let carprice = toShow.price
   - let actionid = "/resource/car/" + carid
      
    

   script let actionid = "#{actionid}" 
 
   form(id='carForm', action=actionid, method="PUT") 
    div.form-group 
        label(for='car_brand' class="form-label") Tea Brand 
        input#car_brand(type='text',class="form-control", name='car_brand', value = car_brand) 
    div.form-group 
        label(for='size' class="form-label") Tea Size 
        input#size(type='text',class="form-control", name='size', value= carsize) 
    div.form-group 
        label(for='price' class="form-label") Tea Price 
        input#price(type='number',class="form-control", name='price', value= carprice) 
    input(type="submit",class="btn btn-primary") 
   
   script. 
    document.forms['carForm'].addEventListener('submit', (event) => { 
      event.preventDefault(); 
      // TODO do something here to show user that form is being submitted 
      fetch(event.target.action, { 
        method: 'PUT', 
        body: new URLSearchParams(new FormData(event.target)) // event.target is the form 
      }).then((resp) => { 
        return resp.json(); // or resp.text() or whatever the server sends 
      }).then((body) => { 
        alert("Update succeded") 
        // TODO handle body 
      }).catch((error) => { 
        // TODO handle error 
        alert("Update failed " + error ) 
      }); 
    }); 